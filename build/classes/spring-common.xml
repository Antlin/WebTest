<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
            http://www.springframework.org/schema/context  
     	   http://www.springframework.org/schema/context/spring-context.xsd  
     	   http://www.springframework.org/schema/aop 
     	   http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
           http://www.springframework.org/schema/mvc  
           http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	<!-- 配置hibernate的sessionFactory
		里面有属性:dataSuorce 连接数据源ref
				取得数据源后和数据库打交道的方式属性：hibernateProperties:prop:里面用Map存键值<prop key="">value</prop>
																	hibernate.dialect：数据库类型
																	hibernate.hbm2ddl.auto：自动生成DDL的方式
																	hibernate.show_sql：是否展示sql语句
																	hibernate.format_sql是否用数据库规定的方式
				
				mappingResuorces:映射文件的读取:装list里面，value=项目下的映射文件路径<list><value>com/foreveross/ssh/entity/User.hbm.xml</value></list>
	
	配置切入表达式<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
				 	<tx:attributes>
				 		<tx:method name="*" propagation="REQUIRED"/>
				 	</tx:attributes>
				 </tx:advice> 
	配置切入点<aop:config>
	 			<aop:advisor advice-ref="transactionAdvice" pointcut="execution(* com.foreveross.ssh.service.UserService.*(..))"/>
			</aop:config>
	 -->
	
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl" />
		<property name="username" value="arcl" />
		<property name="password" value="123456" />
	</bean>
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		<property name="mappingResources" >
			<list>
				<value>com/foreveross/ssh/entity/User.hbm.xml</value>
				<value>com/foreveross/ssh/entity/Log.hbm.xml</value>
			</list>
		</property>
	</bean>
	<!-- Log配置依赖 -->
	<bean id="log" class="com.foreveross.ssh.entity.Log">
	</bean>
	<!-- UserDao配置依赖 -->
	<bean id="userDao" class="com.foreveross.ssh.dao.UserDao">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- Log配置依赖-->
	<bean id="logDao" class="com.foreveross.ssh.dao.LogDao">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<bean id="logService" class="com.foreveross.ssh.service.LogService">
		<property name="logDao" ref="logDao" />
	</bean> 
		
	<bean id="userService" class="com.foreveross.ssh.service.UserService">
		<property name="iud" ref="userDao" />
		<property name="ild" ref="logDao"/>
		<property name="log" ref="log"/>
	</bean>
	
	<bean id="ActionClass" class="com.foreveross.web.Action.UserAction">
		<property name="userService" ref="userService"></property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:advisor advice-ref="transactionAdvice" pointcut="execution(* com.foreveross.ssh.service.UserService.*(..))"/>
	</aop:config>
</beans>